//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusTicketManagementApplication.src.dbConnection
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BusManagementEntities : DbContext
    {
        public BusManagementEntities()
            : base("name=BusManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AGENT> AGENTs { get; set; }
        public virtual DbSet<BOOKING> BOOKINGs { get; set; }
        public virtual DbSet<BUS> Buses { get; set; }
        public virtual DbSet<BUSROUTE> BUSROUTEs { get; set; }
        public virtual DbSet<BUSSTATION> BUSSTATIONs { get; set; }
        public virtual DbSet<CASHRESERVE> CASHRESERVEs { get; set; }
        public virtual DbSet<DRIVER> DRIVERs { get; set; }
        public virtual DbSet<EMPLOYEE> EMPLOYEEs { get; set; }
        public virtual DbSet<EVENT> EVENTs { get; set; }
        public virtual DbSet<PACKAGE> PACKAGEs { get; set; }
        public virtual DbSet<PACKAGEPRICEPOLICY> PACKAGEPRICEPOLICies { get; set; }
        public virtual DbSet<PASSENGER> PASSENGERs { get; set; }
        public virtual DbSet<PLACE> PLACEs { get; set; }
        public virtual DbSet<POSITION> POSITIONs { get; set; }
        public virtual DbSet<PRIVILEGE> PRIVILEGEs { get; set; }
        public virtual DbSet<REFUND> REFUNDs { get; set; }
        public virtual DbSet<SYSTEMACCOUNT> SYSTEMACCOUNTs { get; set; }
        public virtual DbSet<TICKET> TICKETs { get; set; }
        public virtual DbSet<TRIP> TRIPs { get; set; }
        public virtual DbSet<V_AGENTINFOR> V_AGENTINFOR { get; set; }
        public virtual DbSet<V_AVAILABLETRIP> V_AVAILABLETRIP { get; set; }
        public virtual DbSet<V_BOOKINGINFOR> V_BOOKINGINFOR { get; set; }
        public virtual DbSet<V_BUSSTATIONINFOR> V_BUSSTATIONINFOR { get; set; }
        public virtual DbSet<V_DRIVERINFOR> V_DRIVERINFOR { get; set; }
        public virtual DbSet<V_EMPLOYEEINFOR> V_EMPLOYEEINFOR { get; set; }
        public virtual DbSet<V_ROUTEINFOR> V_ROUTEINFOR { get; set; }
        public virtual DbSet<V_TRIPINFOR> V_TRIPINFOR { get; set; }
    
        public virtual int pro_AddBooking(string id_ticket, string id_passenger, string id_employee)
        {
            var id_ticketParameter = id_ticket != null ?
                new ObjectParameter("id_ticket", id_ticket) :
                new ObjectParameter("id_ticket", typeof(string));
    
            var id_passengerParameter = id_passenger != null ?
                new ObjectParameter("id_passenger", id_passenger) :
                new ObjectParameter("id_passenger", typeof(string));
    
            var id_employeeParameter = id_employee != null ?
                new ObjectParameter("id_employee", id_employee) :
                new ObjectParameter("id_employee", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pro_AddBooking", id_ticketParameter, id_passengerParameter, id_employeeParameter);
        }
    
        public virtual int pro_AddDefaultBooking(string id_ticket, string id_passenger)
        {
            var id_ticketParameter = id_ticket != null ?
                new ObjectParameter("id_ticket", id_ticket) :
                new ObjectParameter("id_ticket", typeof(string));
    
            var id_passengerParameter = id_passenger != null ?
                new ObjectParameter("id_passenger", id_passenger) :
                new ObjectParameter("id_passenger", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pro_AddDefaultBooking", id_ticketParameter, id_passengerParameter);
        }
    
        public virtual int pro_CancelTicket(string id_ticket)
        {
            var id_ticketParameter = id_ticket != null ?
                new ObjectParameter("id_ticket", id_ticket) :
                new ObjectParameter("id_ticket", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pro_CancelTicket", id_ticketParameter);
        }
    
        public virtual int pro_SetCancelTrip(string id_trip)
        {
            var id_tripParameter = id_trip != null ?
                new ObjectParameter("id_trip", id_trip) :
                new ObjectParameter("id_trip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pro_SetCancelTrip", id_tripParameter);
        }
    
        public virtual int pro_SetFinishTrip(string id_trip)
        {
            var id_tripParameter = id_trip != null ?
                new ObjectParameter("id_trip", id_trip) :
                new ObjectParameter("id_trip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pro_SetFinishTrip", id_tripParameter);
        }
    
        public virtual int pro_SetGoingTrip(string id_trip)
        {
            var id_tripParameter = id_trip != null ?
                new ObjectParameter("id_trip", id_trip) :
                new ObjectParameter("id_trip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pro_SetGoingTrip", id_tripParameter);
        }
    }
}
