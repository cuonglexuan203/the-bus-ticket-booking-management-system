<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PcbAAvatar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fxklJuZfC0lC8U+7m/EAAAAASUVORK5CYII=
</value>
  </data>
</root>